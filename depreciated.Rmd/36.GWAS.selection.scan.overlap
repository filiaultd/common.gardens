---
title: "36.GWAS.selection.scan.overlap"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
source("99.geo.helper.fxns.R")
library(ggplot2)
library(ggpubr)
library(cowplot)
```

## Introduction

Looking for overlap between published genome scans and field fitness GWAS "hits"

## 1. prep published scan and climate association data

```{r load scan data}
### christian's N/S swept intervals
ci <- read.csv("./data/selection.scans/christian.intervals.csv", stringsAsFactors=FALSE)
ci$source <- "SNS"

### Swedish genomes paper selection scans
sgp <- read.csv("./data/selection.scans/Swedish.genomes.paper.sweeps.simple.csv", stringsAsFactors=FALSE)
sgp <- sgp[,1:6]
sgp$source <- "SGP"

### Top climate associations Hancock at al.
h.assoc <- read.table("./data/selection.scans/Hancock.tophits.txt", stringsAsFactors=FALSE, header=TRUE)
h.assoc$source <- "CAH"

### Fournier Level hits
flh <- read.csv("./data/selection.scans/Fournier_Level_GWAs_Clim_Data.csv", stringsAsFactors=FALSE)
flh$source <- "AFL"

### Lasky associations with climate
### waiting to download

### Horton selection scans
### FST, CLR, PHS
### "we split the genome into 10-kb windows and took the maximum score from the PHS, CLR and FST scans for each window as the test statistics".  Then took top 1% of these?  A bit unclear.
### For now, just take top 1% of each, not in windows

#fst
h.fst <- read.table("./data/selection.scans/selection_scans_horton/global.all.fsts", stringsAsFactors=FALSE, header=TRUE)
h.fst <- h.fst[order(h.fst$fst, decreasing=TRUE),]
top.fst <- h.fst[1:(nrow(h.fst)*0.01),]
top.fst$source <- "FST"

#phs
h.phs <- read.table("./data/selection.scans/selection_scans_horton/phsscores.pos.txt",stringsAsFactors=FALSE, header=TRUE)
h.phs <- h.phs[order(h.phs$PHS, decreasing=TRUE),]
top.phs <- h.phs[1:(nrow(h.phs)*0.01),]
top.phs$source <- "PHS"

#clr
h.clr <- read.table("./data/selection.scans/selection_scans_horton/allCLR.txt", stringsAsFactors=FALSE, header=TRUE)
h.clr <- h.clr[order(h.clr$meanCLR, decreasing=TRUE),]
top.clr <- h.clr[1:(nrow(h.clr)*0.01),]
top.clr$source <- "CLR"
```

```{r concatenate data to one variable}
#chr, pos, source as column names
cn <- c("chr", "pos", "source")
ci.c <- ci[,c("chr","pos","source")]
sgp.c <- sgp[,c("Chromosome", "Position", "source")]
colnames(sgp.c) <- cn
h.assoc.c <- h.assoc[,c("chr","position","source")]
colnames(h.assoc.c) <- cn
flh.c <- flh[,c("Chromosome", "Position", "source")]
colnames(flh.c) <- cn
top.fst.c <- top.fst[,c("chr9","pos9","source")]
colnames(top.fst.c) <- cn
top.phs.c <- top.phs[,c("chr", "pos","source")]
top.clr.c <- top.clr[,c("chr", "location", "source")]
colnames(top.clr.c) <- cn

scan.dat <- rbind(ci.c, sgp.c, h.assoc.c, flh.c, top.fst.c, top.phs.c, top.clr.c)
colnames(scan.dat) <- c("Chromosome", "Position", "source")
```

## 2. 2011 fitness GWAS results
```{r 2011 betas}
load("./data/betas2011.Rdat")
colnames(betas2011)[c(1,3)] <- c("Chromosome", "Position")
#genome.plot <- function(updata, plot.var)
betas2011$logp <- -log10(betas2011$pval)

#genome.plot(updata=betas2011[betas2011$logp>2,], plot.var="logp")
#double check ylimits in this script
```

## 3. 2012 fitness GWAS results
```{r 2012 betas}
load("./data/betas2012.Rdat")
colnames(betas2012)[c(1,3)] <- c("Chromosome", "Position")
#genome.plot <- function(updata, plot.var)
betas2012$logp <- -log10(betas2012$pval)

#genome.plot(updata=betas2012[betas2012$logp>2,], plot.var="logp")
#something wrong with the ylimits in my script!
```

## 4. overlay selection scan SNPs with manhattan plot
Do this by chromosome, by year, so will spread out well.
Should be a 3-panel figure - 2 year manhattans on bottom, dotplot on top.

```{r overlap plots}
chr.lengths <- c(30427671,19698289,23459830,18585056,26975502)
up.chr <- 1

for(up.chr in 1:5){
  up.dat <- scan.dat[scan.dat$Chromosome==up.chr,]
  up.dat$source <- factor(up.dat$source, levels=c("SNS","SGP","PHS","FST","CLR","CAH","AFL"))
  up.b11 <- betas2011[betas2011$Chromosome==up.chr,]
  up.b12 <- betas2012[betas2012$Chromosome==up.chr,]
  up.cl <- chr.lengths[up.chr]
  max.y <- max(c(max(up.b11$logp),max(up.b12$logp)))
  up.plotname <- paste("./figures/gwas.scan.overlap.chr",up.chr,"pdf", sep=".")

  scan.plot <- ggplot(up.dat, aes(Position, source)) +
    geom_point(shape=1) +
    xlim(0,up.cl) +
    theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

  plot11 <- ggplot(up.b11[up.b11$logp>2,], aes(Position, logp)) +
    geom_point(color="blue") +
    xlim(0, up.cl) +
    ylim(2, max.y) +
    theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
    ylab("-log10 p-value") + 
    geom_text(x=0, y=max.y, label="2011")
        

  plot12 <- ggplot(up.b12[up.b12$logp>2,], aes(Position, logp)) +
    geom_point(color="dodgerblue") +
    xlim(0, up.cl) +
    ylim(2, max.y) +
    ylab("-log10 p-value") + 
    geom_text(x=0, y=max.y, label="2012")

  title <- ggdraw() + 
    draw_label(paste("Chromosome",up.chr, sep=" "),fontface = 'bold',x = 0,hjust = 0) +
    theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(0, 0, 0, 7)
    )

  # from cowplot library
  cplot <- plot_grid(title, scan.plot, plot11, plot12,ncol=1, align="v",labels = c("","A","B","C"), rel_heights=c(0.1,0.7,1,1.3))
  save_plot(filename=up.plotname,cplot, base_height=5.5,base_width=10)
}

```